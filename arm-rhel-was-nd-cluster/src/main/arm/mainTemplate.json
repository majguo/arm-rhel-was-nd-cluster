{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "_artifactsLocation": {
            "type": "string",
            "defaultValue": "[deployment().properties.templateLink.uri]"
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "defaultValue": ""
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]"
        },
        "dynamic": {
            "defaultValue": false,
            "type": "bool"
        },
        "numberOfNodes": {
            "type": "int"
        },
        "dmgrVMPrefix": {
            "type": "string"
        },
        "managedVMPrefix": {
            "type": "string"
        },
        "dnsLabelPrefix": {
            "type": "string"
        },
        "vmSize": {
            "defaultValue": "Standard_D2_v3",
            "type": "string"
        },
        "osDiskType": {
            "defaultValue": "StandardSSD_LRS",
            "type": "string"
        },
        "addressPrefix": {
            "defaultValue": "10.0.0.0/16",
            "type": "string"
        },
        "subnetName": {
            "defaultValue": "subnet01",
            "type": "string"
        },
        "subnetAddressPrefix": {
            "defaultValue": "10.0.1.0/24",
            "type": "string"
        },
        "vmAdminId": {
            "type": "string"
        },
        "vmAdminPwd": {
            "type": "securestring"
        },
        "adminUser": {
            "type": "string"
        },
        "adminPwd": {
            "type": "securestring"
        },
        "connectToDB2Server": {
            "defaultValue": false,
            "type": "bool"
        },
        "db2ServerName": {
            "defaultValue": "",
            "type": "string"
        },
        "db2ServerPortNumber": {
            "defaultValue": "",
            "type": "string"
        },
        "db2DBName": {
            "defaultValue": "",
            "type": "string"
        },
        "db2DBUserName": {
            "defaultValue": "",
            "type": "string"
        },
        "db2DBUserPwd": {
            "defaultValue": "",
            "type": "securestring"
        },
        "db2DSJndiName": {
            "defaultValue": "",
            "type": "string"
        },
        "connectToELK": {
            "defaultValue": false,
            "type": "bool"
        },
        "cloudId": {
            "defaultValue": "",
            "type": "string"
        },
        "cloudAuthUser": {
            "defaultValue": "",
            "type": "string"
        },
        "cloudAuthPwd": {
            "defaultValue": "",
            "type": "securestring"
        },
        "guidValue": {
            "defaultValue": "[newGuid()]",
            "type": "string"
        }
    },
    "variables": {
        "dmgrVMName": "[concat(parameters('dmgrVMPrefix'), take(replace(parameters('guidValue'),'-',''),6), 'VM')]",
        "managedVMPrefix": "[concat(parameters('managedVMPrefix'), take(replace(parameters('guidValue'),'-',''),6), 'VM')]",
        "dnsLabelPrefix": "[concat(parameters('dnsLabelPrefix'), take(replace(parameters('guidValue'),'-',''),6))]",
        "virtualNetworkName": "[concat(variables('dnsLabelPrefix'), '-vnet')]",
        "networkSecurityGroupName": "[concat(variables('dnsLabelPrefix'), '-nsg')]",
        "publicIPAddressName": "[concat(variables('dmgrVMName'), '-ip')]",
        "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), parameters('subnetName'))]",
        "networkSecurityGroupRef": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]",
        "virtualNetworkRef": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
        "storageAccountName": "[concat('storage',take(replace(parameters('guidValue'),'-',''),6))]",
        "storageRef": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "scriptLocation": "[uri(parameters('_artifactsLocation'), 'scripts/')]",
        "arguments1": "[concat(' -m ',parameters('adminUser'),' -c ',parameters('adminPwd'),' -h ',variables('dmgrVMName'),' -r ',sub(parameters('numberOfNodes'),1),' -x ',parameters('dynamic'))]",
        "arguments2": "[if(parameters('connectToDB2Server'),concat(' -n \"',parameters('db2ServerName'),'\" -t ',parameters('db2ServerPortNumber'),' -d ',parameters('db2DBName'),' -i ',parameters('db2DBUserName'),' -s ',parameters('db2DBUserPwd'),' -j ',parameters('db2DSJndiName')),' -n  -t  -d  -i  -s  -j ')]",
        "arguments3": "[if(parameters('connectToELK'),concat(' -g ',parameters('cloudId'),' -o ',parameters('cloudAuthUser'),' -k ',parameters('cloudAuthPwd')),' -g  -o  -k ')]"
    },
    "resources": [
        {
            "apiVersion": "2019-09-01",
            "name": "${tracking.pid}",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[variables('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "Storage",
            "properties": {
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-06-01",
            "name": "[variables('networkSecurityGroupName')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "TCP",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 300,
                            "direction": "Inbound",
                            "destinationPortRanges": [
                                "9060",
                                "9080",
                                "9043",
                                "9443"
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-06-01",
            "name": "[variables('virtualNetworkName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('networkSecurityGroupRef')]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('addressPrefix')]"
                    ]
                },
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('virtualNetworkName'), '/', parameters('subnetName'))]",
            "dependsOn": [
                "[variables('virtualNetworkRef')]",
                "[variables('networkSecurityGroupRef')]"
            ],
            "properties": {
                "addressPrefix": "[parameters('subnetAddressPrefix')]",
                "networkSecurityGroup": {
                    "id": "[variables('networkSecurityGroupRef')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-06-01",
            "name": "[concat(if(equals(copyIndex(), 0), variables('dmgrVMName'), concat(variables('managedVMPrefix'), copyIndex())), '-ip')]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "publicIPLoop",
                "count": "[parameters('numberOfNodes')]"
            },
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[concat(toLower(variables('dnsLabelPrefix')), if(equals(copyIndex(), 0), '', concat('-mn', copyIndex())))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-06-01",
            "name": "[concat(if(equals(copyIndex(), 0), variables('dmgrVMName'), concat(variables('managedVMPrefix'), copyIndex())), '-if')]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "nicLoop",
                "count": "[parameters('numberOfNodes')]"
            },
            "dependsOn": [
                "publicIPLoop",
                "[variables('subnetRef')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(if(equals(copyIndex(), 0), variables('dmgrVMName'), concat(variables('managedVMPrefix'), copyIndex())), '-ip'))]"
                            },
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-03-01",
            "name": "[if(equals(copyIndex(), 0), variables('dmgrVMName'), concat(variables('managedVMPrefix'), copyIndex()))]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "virtualMachineLoop",
                "count": "[parameters('numberOfNodes')]"
            },
            "dependsOn": [
                "nicLoop"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "microsoft_javaeeonazure_test",
                        "offer": "rhel74-was-jdk-preview",
                        "sku": "905",
                        "version": "9.0.5"
                    },
                    "osDisk": {
                        "name": "[concat(if(equals(copyIndex(), 0), variables('dmgrVMName'), concat(variables('managedVMPrefix'), copyIndex())), '-disk')]",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "[parameters('osDiskType')]"
                        }
                    }
                },
                "osProfile": {
                    "computerName": "[if(equals(copyIndex(), 0), variables('dmgrVMName'), concat(variables('managedVMPrefix'), copyIndex()))]",
                    "adminUsername": "[parameters('vmAdminId')]",
                    "adminPassword": "[parameters('vmAdminPwd')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(if(equals(copyIndex(), 0), variables('dmgrVMName'), concat(variables('managedVMPrefix'), copyIndex())), '-if'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(variables('storageRef'), '2019-06-01').primaryEndpoints.blob]"
                    }
                }
            },
            "plan": {
                "name": "905",
                "publisher": "microsoft_javaeeonazure_test",
                "product": "rhel74-was-jdk-preview"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2019-03-01",
            "name": "[concat(if(equals(copyIndex(), 0), variables('dmgrVMName'), concat(variables('managedVMPrefix'), copyIndex())), '/install')]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "virtualMachineExtensionLoop",
                "count": "[parameters('numberOfNodes')]"
            },
            "dependsOn": [
                "virtualMachineLoop"
            ],
            "properties": {
                "autoUpgradeMinorVersion": true,
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "settings": {
                    "fileUris": [
                        "[uri(variables('scriptLocation'), concat('install.sh', parameters('_artifactsLocationSasToken')))]",
                        "[uri(variables('scriptLocation'), concat('create-cluster.py', parameters('_artifactsLocationSasToken')))]",
                        "[uri(variables('scriptLocation'), concat('create-dcluster.py', parameters('_artifactsLocationSasToken')))]",
                        "[uri(variables('scriptLocation'), concat('create-ds.py', parameters('_artifactsLocationSasToken')))]",
                        "[uri(variables('scriptLocation'), concat('enable-hpel.template', parameters('_artifactsLocationSasToken')))]",
                        "[uri(variables('scriptLocation'), concat('get_custom_property.py', parameters('_artifactsLocationSasToken')))]",
                        "[uri(variables('scriptLocation'), concat('set_custom_property.py', parameters('_artifactsLocationSasToken')))]"
                    ],
                    "commandToExecute": "[concat('sh install.sh -f ', equals(copyIndex(), 0), variables('arguments1'), variables('arguments2'), variables('arguments3'))]"
                }
            }
        }
    ],
    "outputs": {
        "resourceGroupName": {
            "type": "string",
            "value": "[resourceGroup().name]"
        },
        "region": {
            "type": "string",
            "value": "[parameters('location')]"
        },
        "clusterName": {
            "type": "string",
            "value": "MyCluster"
        },
        "nodeGroupName": {
            "type": "string",
            "value": "DefaultNodeGroup"
        },
        "coreGroupName": {
            "type": "string",
            "value": "DefaultCoreGroup"
        },
        "dmgrHostName": {
            "type": "string",
            "value": "[variables('dmgrVMName')]"
        },
        "dmgrPort": {
            "type": "string",
            "value": "8879"
        },
        "virtualNetworkName": {
            "type": "string",
            "value": "[variables('virtualNetworkName')]"
        },
        "subnetName": {
            "type": "string",
            "value": "[parameters('subnetName')]"
        },
        "adminSecuredConsole": {
            "type": "string",
            "value": "[concat('https://',reference(variables('publicIPAddressName')).dnsSettings.fqdn,':9043/ibm/console')]"
        }
    }
}
